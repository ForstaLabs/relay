buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath files('libs/gradle-witness.jar')
    }
}

apply plugin: 'com.android.application'
apply plugin: 'witness'

repositories {
    maven {
        url "https://maven.google.com"
    }
    maven {
        url "https://raw.github.com/whispersystems/maven/master/preferencefragment/releases/"
    }
    maven {
        url "https://raw.github.com/whispersystems/maven/master/smil/releases/"
    }
    maven {
        url "https://raw.github.com/whispersystems/maven/master/shortcutbadger/releases/"
    }
    maven { // textdrawable
        url 'https://dl.bintray.com/amulyakhare/maven'
    }
    maven {
        url 'https://jitpack.io'
    }
    jcenter()
    google()
}

dependencies {
    compile('com.android.support:support-v4-preferencefragment:1.0.0@aar') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile 'com.android.support:support-compat:26.1.0'
    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.android.support:gridlayout-v7:26.1.0'
    compile 'com.android.support:multidex:1.0.2'

    compile 'com.google.android.gms:play-services-base:15.0.1'
    compile 'com.google.android.gms:play-services-gcm:15.0.1'
    compile 'com.google.android.gms:play-services-maps:15.0.1'
    compile 'com.google.android.gms:play-services-location:15.0.1'
    compile 'com.google.android.gms:play-services-places:15.0.1'
    compile 'com.google.android.gms:play-services-safetynet:15.0.1'
    compile('com.doomonafireball.betterpickers:library:1.5.3') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    compile('com.github.ForstaLabs:libsignal-service-java:forsta-v2.3.1.14') {
        exclude group: 'org.whispersystems', module: 'curve25519-java'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile('cn.carbswang.android:NumberPickerView:1.0.9') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    androidTestCompile('org.assertj:assertj-core:1.7.1') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    androidTestCompile('com.squareup.assertj:assertj-android:1.0.0') {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    compile 'org.whispersystems:curve25519-android:0.3.0'
    compile 'com.squareup.okhttp3:okhttp:3.6.0'
    compile "me.leolin:ShortcutBadger:1.1.16"
    compile 'se.emilsjolander:stickylistheaders:2.7.0'
    compile 'com.jpardogo.materialtabstrip:library:1.0.9'
    compile 'org.w3c:smil:1.0.0'
    compile 'org.apache.httpcomponents:httpclient-android:4.3.5'
    compile 'com.github.chrisbanes:Photoview:1.3.1'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.makeramen:roundedimageview:2.1.0'
    compile 'com.pnikosis:materialish-progress:1.5'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'pl.tajchert:waitingdots:0.1.0'
    compile 'com.soundcloud.android:android-crop:0.9.10@aar'
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    compile 'com.google.zxing:android-integration:3.1.0'
    compile 'com.squareup.dagger:dagger:1.2.2'
    annotationProcessor 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile 'com.madgag.spongycastle:prov:1.51.0.0'
    compile 'org.whispersystems:jobmanager:1.0.2'
    compile 'org.whispersystems:libpastelog:1.0.7'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    compile 'com.h6ah4i.android.compat:mulsellistprefcompat:1.0.0'
    compile 'com.google.zxing:core:3.2.1'
    compile 'com.annimon:stream:1.1.8'
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.1'
    testCompile 'org.mockito:mockito-core:1.9.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.1'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.1'
    androidTestCompile 'com.google.dexmaker:dexmaker:1.2'
    androidTestCompile 'com.google.dexmaker:dexmaker-mockito:1.2'
    provided 'com.squareup.dagger:dagger-compiler:1.2.2'
}

dependencyVerification {
    verify = [
            'se.emilsjolander:stickylistheaders:a08ca948aa6b220f09d82f16bbbac395f6b78897e9eeac6a9f0b0ba755928eeb',
            'com.jpardogo.materialtabstrip:library:c6ef812fba4f74be7dc4a905faa4c2908cba261a94c13d4f96d5e67e4aad4aaa',
            'org.w3c:smil:085dc40f2bb249651578bfa07499fd08b16ad0886dbe2c4078586a408da62f9b',
            'com.github.bumptech.glide:glide:76ef123957b5fbaebb05fcbe6606dd58c3bc3fcdadb257f99811d0ac9ea9b88b',
            'com.makeramen:roundedimageview:1f5a1865796b308c6cdd114acc6e78408b110f0a62fc63553278fbeacd489cd1',
            'com.pnikosis:materialish-progress:d71d80e00717a096784482aee21001a9d299fec3833e4ebd87739ed36cf77c54',
            'de.greenrobot:eventbus:61d743a748156a372024d083de763b9e91ac2dcb3f6a1cbc74995c7ddab6e968',
            'pl.tajchert:waitingdots:2835d49e0787dbcb606c5a60021ced66578503b1e9fddcd7a5ef0cd5f095ba2c',
            'com.soundcloud.android:android-crop:ffd4b973cf6e97f7d64118a0dc088df50e9066fd5634fe6911dd0c0c5d346177',
            'com.melnykov:floatingactionbutton:15d58d4fac0f7a288d0e5301bbaf501a146f5b3f5921277811bf99bd3b397263',
            'com.google.zxing:android-integration:89e56aadf1164bd71e57949163c53abf90af368b51669c0d4a47a163335f95c4',
            'com.squareup.dagger:dagger:789aca24537022e49f91fc6444078d9de8f1dd99e1bfb090f18491b186967883',
            'com.doomonafireball.betterpickers:library:132ecd685c95a99e7377c4e27bfadbb2d7ed0bea995944060cd62d4369fdaf3d',
            'com.madgag.spongycastle:prov:b8c3fec3a59aac1aa04ccf4dad7179351e54ef7672f53f508151b614c131398a',
            'org.whispersystems:jobmanager:506f679fc2fcf7bb6d10f00f41d6f6ea0abf75c70dc95b913398661ad538a181',
            'org.whispersystems:libpastelog:bb331d9a98240fc139101128ba836c1edec3c40e000597cdbb29ebf4cbf34d88',
            'com.amulyakhare:com.amulyakhare.textdrawable:54c92b5fba38cfd316a07e5a30528068f45ce8515a6890f1297df4c401af5dcb',
            'com.h6ah4i.android.compat:mulsellistprefcompat:47167c5cb796de1a854788e9ff318358e36c8fb88123baaa6e38fb78511dfabe',
            'com.google.zxing:core:b4d82452e7a6bf6ec2698904b332431717ed8f9a850224f295aec89de80f2259',
            'cn.carbswang.android:NumberPickerView:18b3c316d62c7c277978a8d4ed57a5b8f4e943762264960f579a8a549c756729',
            'com.nineoldandroids:library:68025a14e3e7673d6ad2f95e4b46d78d7d068343aa99256b686fe59de1b3163a',
            'javax.inject:javax.inject:91c77044a50c481636c32d916fd89c9118a72195390452c81065080f957de7ff',
            'com.madgag.spongycastle:core:8d6240b974b0aca4d3da9c7dd44d42339d8a374358aca5fc98e50a995764511f',
            'com.googlecode.libphonenumber:libphonenumber:9625de9d2270e9a280ff4e6d9ef3106573fb4828773fd32c9b7614f4e17d2811',
            'com.google.protobuf:protobuf-java:e0c1c64575c005601725e7c6a02cebf9e1285e888f756b2a1d73ffa8d725cc74',
            'com.squareup.okhttp:okhttp:89b7f63e2e5b6c410266abc14f50fe52ea8d2d8a57260829e499b1cd9f0e61af',
            'com.fasterxml.jackson.core:jackson-databind:835097bcdd11f5bc8a08378c70d4c8054dfa4b911691cc2752063c75534d198d',
            'com.fasterxml.jackson.core:jackson-annotations:0ca408c24202a7626ec8b861e99d85eca5e38b73311dd6dd12e3e9deecc3fe94',
            'com.fasterxml.jackson.core:jackson-core:cbf4604784b4de226262845447a1ad3bb38a6728cebe86562e2c5afada8be2c0',
    ]
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    useLibrary 'org.apache.http.legacy'

    dexOptions {
        javaMaxHeapSize "4g"
    }
    defaultConfig {
        applicationId 'io.forsta.relay'
        dimension "forsta"
        minSdkVersion 21
        targetSdkVersion 26
        versionName "2.0.0"
        versionCode (((new Date().getTime() / 1000) - 1532462941) as Integer)
        multiDexEnabled true
        buildConfigField "long", "BUILD_TIMESTAMP", getLastCommitTimestamp() + "L"
        buildConfigField "String", "RECAPTCHA_KEY", "\"6LetY10UAAAAAKugwBLDP31SVLcl1iem9K1fqJlA\""
        resValue "string", "forsta_authorities", applicationId + '.provider.ccsm'
        resValue "string", "forsta_account_type", applicationId
    }
    flavorDimensions "forsta"
    productFlavors {
        prototype {
            applicationIdSuffix '.prototype'
            versionNameSuffix "-prototype-" + timestamp()
            buildConfigField "String", "FORSTA_API_URL", "\"https://atlas-dev.forsta.io\""
            buildConfigField "String", "SIGNAL_API_URL", "\"https://forsta-signalserver-dev.herokuapp.com\""
            buildConfigField "String", "FORSTA_SYNC_NUMBER", "\"1e1116aa-31b3-4fb2-a4db-21e8136d4f3a\""
            resValue "string", "forsta_authorities", defaultConfig.applicationId + applicationIdSuffix + '.provider.ccsm'
            resValue "string", "forsta_account_type", defaultConfig.applicationId + applicationIdSuffix
        }
        dev {
            applicationIdSuffix '.dev'
            versionNameSuffix "-dev-" + timestamp()
            buildConfigField "String", "FORSTA_API_URL", "\"https://atlas-dev.forsta.io\""
            buildConfigField "String", "SIGNAL_API_URL", "\"https://forsta-signalserver-dev.herokuapp.com\""
            buildConfigField "String", "FORSTA_SYNC_NUMBER", "\"1e1116aa-31b3-4fb2-a4db-21e8136d4f3a\""
            resValue "string", "forsta_authorities", defaultConfig.applicationId + applicationIdSuffix + '.provider.ccsm'
            resValue "string", "forsta_account_type", defaultConfig.applicationId + applicationIdSuffix
        }
        stage {
            applicationIdSuffix '.stage'
            versionNameSuffix "-stage-" + timestamp()
            buildConfigField "String", "FORSTA_API_URL", "\"https://atlas-stage.forsta.io\""
            buildConfigField "String", "SIGNAL_API_URL", "\"https://forsta-signalserver-stage.herokuapp.com\""
            buildConfigField "String", "FORSTA_SYNC_NUMBER", "\"88e7165e-d2da-4c3f-a14a-bb802bb0cefb\""
            resValue "string", "forsta_authorities", defaultConfig.applicationId + applicationIdSuffix + '.provider.ccsm'
            resValue "string", "forsta_account_type", defaultConfig.applicationId + applicationIdSuffix
        }
        prod {
            versionNameSuffix "-" + timestamp()
            buildConfigField "String", "FORSTA_API_URL", "\"https://atlas.forsta.io\""
            buildConfigField "String", "SIGNAL_API_URL", "\"https://forsta-signalserver-prod.herokuapp.com\""
            buildConfigField "String", "FORSTA_SYNC_NUMBER", "\"cf40fca2-dfa8-4356-8ae7-45f56f7551ca\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
        exclude 'NOTICE'
        exclude 'asm-license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }
    signingConfigs {
        release {
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }
    buildTypes {
        debug {
            minifyEnabled false
            jniDebuggable true
            renderscriptDebuggable true
            debuggable true
            renderscriptOptimLevel 3
            zipAlignEnabled true
            buildConfigField "boolean", "DEV_BUILD", "true"
        }
        release {
            buildConfigField "boolean", "DEV_BUILD", "false"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-google-play-services.pro',
                    'proguard-dagger.pro',
                    'proguard-jackson.pro',
                    'proguard-sqlite.pro',
                    'proguard-appcompat-v7.pro',
                    'proguard-square-okhttp.pro',
                    'proguard-square-okio.pro',
                    'proguard-spongycastle.pro',
                    'proguard-rounded-image-view.pro',
                    'proguard-glide.pro',
                    'proguard-shortcutbadger.pro',
                    'proguard-retrofit.pro',
                    'proguard-retrolambda.pro',
                    'proguard.cfg'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            renderscriptOptimLevel 3
            zipAlignEnabled true
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        prototype {
            res.srcDirs = ['res-prototype']
        }
        dev {
            res.srcDirs = ['res-dev']
        }
        stage {
            res.srcDirs = ['res-stage']
        }
        androidTest {
            java.srcDirs = ['test/androidTest/java']
        }
        test {
            java.srcDirs = ['test/unitTest/java']
        }
    }
    lintOptions {
        disable 'MissingTranslation'
        disable 'ResourceType'
        abortOnError false
    }
}

tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        task.enabled = false
    }
}

def getLastCommitTimestamp() {
    new ByteArrayOutputStream().withStream { os ->
        def result = exec {
            executable = 'git'
            args = ['log', '-1', '--pretty=format:%ct']
            standardOutput = os
        }

        return os.toString() + "000"
    }
}

def timestamp() {
    return new Date().format('yyyyMMddHHmmss');
}

def Properties props = new Properties()
def propFile = new File('signing.properties')

if (System.getenv('STORE_FILE') && System.getenv('STORE_PASSWORD') && System.getenv('KEY_ALIAS') && System.getenv('KEY_PASSWORD')) {
    println 'Environment variables found for signature'
    android.signingConfigs.release.storeFile = file(System.getenv('STORE_FILE'))
    android.signingConfigs.release.storePassword = System.getenv('STORE_PASSWORD')
    android.signingConfigs.release.keyAlias = System.getenv('KEY_ALIAS')
    android.signingConfigs.release.keyPassword = System.getenv('KEY_PASSWORD')
} else if (propFile.canRead()) {
    println 'Props file found for signature'
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('STORE_FILE') &&
            props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') &&
            props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
    }
} else {
    println 'signing.properties not found'
}

